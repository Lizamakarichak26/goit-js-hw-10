{"mappings":"AAIA,SAASA,EAAQC,GACf,OAAO,SAAUC,GACf,OAAO,IAAIC,SAAQC,GAAWC,YAAW,IAAMD,EAAQF,IAAID,I,EAc/D,IAAIK,EAAe,GACfC,EAAcC,SAASC,eAAe,gBACtCC,EAASF,SAASC,eAAe,UACjCE,EAAQH,SAASC,eAAe,SAChCG,EAAeJ,SAASC,eAAe,YA6C3C,SAASI,IACPF,EAAMG,MAAMC,QAAU,QACtBL,EAAOI,MAAMC,QAAU,OACvBH,EAAaE,MAAMC,QAAU,M,CA/C/BR,EAAYS,iBAAiB,UAyB7B,WACEN,EAAOI,MAAMC,QAAU,QACvBH,EAAaE,MAAMC,QAAU,OAC7B,IAAIE,EAAQV,EAAYW,eAvC1B,SAAyBC,GACvB,OAAOC,MAAM,wDAAqBD,KAAWE,MAAKC,GACzCA,EAASC,Q,EAuClBC,CADclB,EAAaW,GAAOQ,IAE/BJ,KAAKrB,EAAQ,MACbqB,MAAKK,IACJ,IAAIC,EAAOD,EAAK,GAChBlB,SAASC,eAAe,eAAemB,IAAMD,EAAKE,IAClD,IAAIC,EAAUxB,EAAaW,GAC3BT,SAASC,eAAe,cAAcsB,YAAcD,EAAQE,KAC5DxB,SAASC,eAAe,qBAAqBsB,YAAcD,EAAQG,YACnEzB,SAASC,eAAe,qBAAqBsB,YAAcD,EAAQI,YACnExB,EAAOI,MAAMC,QAAU,OACvBH,EAAaE,MAAMC,QAAU,OAAO,IAErCoB,MAAMtB,E,IAzCXN,EAAYO,MAAMC,QAAU,OAC5BL,EAAOI,MAAMC,QAAU,QACvBH,EAAaE,MAAMC,QAAU,OAlBpBK,MAAM,qHAA6BC,MAAKC,GACtCA,EAASC,SAmBjBF,KAAKrB,EAAQ,MACbqB,MAAKK,IAEJA,EAAOA,EAAKU,QAAOC,I,IAAOC,EAAA,OAAkB,OAAT,QAATA,EAAAD,EAAIE,aAAK,IAATD,OAAA,EAAAA,EAAWT,IAAW,IAChDvB,EAAeoB,EACf,IAAK,IAAIc,EAAI,EAAGA,EAAIlC,EAAamC,OAAQD,IAAK,CAC5C,MAAME,EAAQpC,EAAakC,GAC3B,IAAIG,EAASnC,SAASoC,cAAc,UAE/BF,EAAMH,QAEXI,EAAOE,MAAQL,EACfG,EAAOG,UAAY,GAAGJ,EAAMV,OAC5BxB,SAASC,eAAe,gBAAgBsC,YAAYJ,G,CAEtDpC,EAAYO,MAAMC,QAAU,eAC5BL,EAAOI,MAAMC,QAAU,MAAM,IAG9BoB,MAAMtB","sources":["src/index.js"],"sourcesContent":["const url = 'https://api.thecatapi.com/v1/breeds';\nconst url2 = 'https://api.thecatapi.com/v1/images/search';\nconst api_key =\n  'live_ATkDsnwAvU937nPda3qiR2ikVv7ea9Bi3sQ0ez5BCTcp5A1d1bJkzyvl3CMZEOEb';\nfunction sleeper(ms) {\n  return function (x) {\n    return new Promise(resolve => setTimeout(() => resolve(x), ms));\n  };\n}\nfunction fetchBreeds() {\n  return fetch(`${url}?api_key=${api_key}`).then(response => {\n    return response.json();\n  });\n}\nfunction fetchCatByBreed(breedId) {\n  return fetch(`${url2}?breed_ids=${breedId}`).then(response => {\n    return response.json();\n  });\n}\nexport { fetchBreeds, fetchCatByBreed };\nlet storedBreeds = [];\nlet breedSelect = document.getElementById('breed-select')\nlet loader = document.getElementById('loader')\nlet error = document.getElementById('error')\nlet catInfoBlock = document.getElementById('cat-info')\nbreedSelect.addEventListener('change', showBreedImage);\nbreedSelect.style.display = \"none\"\nloader.style.display = \"block\"\ncatInfoBlock.style.display = 'none'\nfetchBreeds()\n  .then(sleeper(2000))\n  .then(data => {\n    //filter to only include those with an `image` object\n    data = data.filter(img => img.image?.url != null);\n    storedBreeds = data;\n    for (let i = 0; i < storedBreeds.length; i++) {\n      const breed = storedBreeds[i];\n      let option = document.createElement('option');\n      //skip any breeds that don't have an image\n      if (!breed.image) continue;\n      //use the current array index\n      option.value = i;\n      option.innerHTML = `${breed.name}`;\n      document.getElementById('breed-select').appendChild(option);\n    }\n    breedSelect.style.display = \"inline-block\"\n    loader.style.display = \"none\"\n    \n  })\n  .catch(showError);\nfunction showBreedImage() {\n  loader.style.display = \"block\"\n  catInfoBlock.style.display = 'none'\n  let index = breedSelect.selectedIndex;\n  let breedId = storedBreeds[index].id;\n  fetchCatByBreed(breedId)\n    .then(sleeper(2000))\n    .then(data => {\n      let item = data[0]\n      document.getElementById('breed_image').src = item.url;\n      let catItem = storedBreeds[index]\n      document.getElementById('bread_name').textContent = catItem.name;\n      document.getElementById('bread_description').textContent = catItem.description;\n      document.getElementById('bread_temperament').textContent = catItem.temperament;\n      loader.style.display = \"none\"\n      catInfoBlock.style.display = 'block'\n    })\n    .catch(showError);\n}\nfunction showError() {\n  error.style.display = \"block\"\n  loader.style.display = \"none\"\n  catInfoBlock.style.display = \"none\"\n}"],"names":["$1f0dc3b9307be026$var$sleeper","ms","x","Promise","resolve","setTimeout","$1f0dc3b9307be026$var$storedBreeds","$1f0dc3b9307be026$var$breedSelect","document","getElementById","$1f0dc3b9307be026$var$loader","$1f0dc3b9307be026$var$error","$1f0dc3b9307be026$var$catInfoBlock","$1f0dc3b9307be026$var$showError","style","display","addEventListener","index","selectedIndex","breedId","fetch","then","response","json","$1f0dc3b9307be026$export$57b7d3a597416aa2","id","data","item","src","url","catItem","textContent","name","description","temperament","catch","filter","img","ref","image","i","length","breed","option","createElement","value","innerHTML","appendChild"],"version":3,"file":"index.dfa3bc5a.js.map"}